{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "What's Done API",
  "Parameters": {
    "LambdaS3Bucket": {
      "Type": "String"
    },
    "LambdaS3Key": {
      "Type": "String"
    },
    "DoneTableName": {
      "Type": "String"
    },
    "UserTableName": {
      "Type": "String"
    },
    "SessionTableName": {
      "Type": "String"
    },
    "SessionSecret": {
      "Type": "String"
    },
    "EnvName": {
      "Type": "String"
    },
    "Region": {
      "Type": "String"
    }
  },
  "Resources": {
    "LambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*",
                    "dax:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kms:Describe*",
                    "kms:Get*",
                    "kms:List*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "GetRootPageFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-GetRootPageFunction"},
        "Description": "What's Done app",
        "Handler": "index.getRootPageRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "GetRootPageLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["GetRootPageFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "GetSigninFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-GetSigninFunction"},
        "Description": "What's Done app",
        "Handler": "index.getSigninRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "GetSigninLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["GetSigninFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "PostSigninFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-PostSigninFunction"},
        "Description": "What's Done app",
        "Handler": "index.postSigninRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "PostSigninLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["PostSigninFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "GetSignoutFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-GetSignoutFunction"},
        "Description": "What's Done app",
        "Handler": "index.signoutRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "GetSignoutLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["GetSignoutFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "GetDonesFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-GetDonesFunction"},
        "Description": "What's Done app",
        "Handler": "index.getDonesRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "GetDonesLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["GetDonesFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "PostDoneFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-PostDoneFunction"},
        "Description": "What's Done app",
        "Handler": "index.postDoneRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "PostDoneLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["PostDoneFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "DeleteDoneFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-DeleteDoneFunction"},
        "Description": "What's Done app",
        "Handler": "index.deleteDoneRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "DeleteDoneLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["DeleteDoneFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "UpdateDoneFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub": "${EnvName}-whatsdone-UpdateDoneFunction"},
        "Description": "What's Done app",
        "Handler": "index.updateDoneRequestHandler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          },
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        },
        "KmsKeyArn": "arn:aws:kms:ap-southeast-2:650892143834:key/3594d37f-a06f-4766-aa9a-ef3cb180eff7",
        "Environment": {
          "Variables": {
            "DB_REGION": {"Ref": "Region"},
            "SESSION_SECRET": {"Ref": "SessionSecret"},
            "DONE_TABLE_NAME": {"Ref": "DoneTableName"},
            "USER_TABLE_NAME": {"Ref": "UserTableName"},
            "SESSION_TABLE_NAME": {"Ref": "SessionTableName"}
          }
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "UpdateDoneLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["UpdateDoneFunction", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${Region}:${AWS::AccountId}:${WhatsdoneApi}/*"}
      }
    },
    "WhatsdoneApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "What's Done",
        "Description": "API used for What's Done requests",
        "FailOnWarnings": true,
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "2017-02-25T13:40:34Z",
            "title": "What's Done API"
          },
          "schemes": ["https"],
          "paths": {
            "/": {
              "get": {
                "produces": ["text/html"],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["GetRootPageFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              }
            },
            "/signin": {
              "get": {
                "produces": ["text/html"],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["GetSigninFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              },
              "post": {
                "produces": ["text/html"],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["PostSigninFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              }
            },
            "/signout": {
              "get": {
                "produces": ["text/html"],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["GetSignoutFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              }
            },
            "/dones": {
              "get": {
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["GetDonesFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              },
              "post": {
                "produces": ["application/json"],
                "parameters": [
                  {
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "schema": {
                      "type": "object",
                      "properties": {
                        "doneThing": {
                          "type": "string"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["PostDoneFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              }
            },
            "/dones/{id}": {
              "delete": {
                "produces": ["application/json"],
                "parameters": [
                  {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["DeleteDoneFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              },
              "put": {
                "produces": ["application/json"],
                "parameters": [
                  {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {"Fn::Sub": [
                    "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
                    {"LambdaArn": {"Fn::GetAtt": ["UpdateDoneFunction", "Arn"]}}
                  ]},
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WhatsdoneApiStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {"Ref": "ApiDeployment"},
        "MethodSettings": [{
          "HttpMethod": "*",
          "ResourcePath": "/*",
          "ThrottlingRateLimit": 10,
          "ThrottlingBurstLimit": 20
        }],
        "RestApiId": {"Ref": "WhatsdoneApi"},
        "StageName": {"Ref": "EnvName"}
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {"Ref": "WhatsdoneApi"}
      }
    }
  },
  "Outputs": {
    "ApiRootUrl": {
      "Description": "Root URL of What's Done API",
      "Value": {"Fn::Sub": "https://${WhatsdoneApi}.execute-api.${Region}.amazonaws.com/${EnvName}"}
    }
  }
}
