{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "What's Done Custom Resource Provisioner",
  "Parameters": {
    "S3Bucket": {"Type": "String"},
    "S3Key": {"Type": "String"}
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "whatsdone-custom-resource-provisioner",
        "Description": "What's Done Custom Resource Provisioner",
        "Handler": "index.handler",
        "Role": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]},
        "Code": {
          "S3Bucket": {"Ref": "S3Bucket"},
          "S3Key": {"Ref": "S3Key"}
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10"
      }
    },
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {"Fn::Sub": "/aws/lambda/${LambdaFunction}"}
      }
    },
    "LambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:DescribeLogStreams",
                      "logs:PutLogEvents"
                  ],
                  "Resource": {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "LambdaFunctionArn": {
      "Value": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
    },
    "LambdaRole": {
      "Value": {"Fn::GetAtt": ["LambdaFunctionRole", "Arn"]}
    }
  }
}
