---
description:
globs:
alwaysApply: true
---

## Project context

- This "What's Done" system is written in TypeScript + React (Node.js).
- Use `yarn` as a package manager for Node.js. Do not use `npm`.

## Coding guidelines

- Make the code self-explanatory so that you won't need comments. Comments should be to clarify "Why" instead of "What".

  Bad example: "Multiply by 24"

  Good example: "Multiplying by 24 as we need to count for whole day"

- For non-customer facing part, don't use try-catch to just provide custom error messages. It makes the code unnecessarily long
  and harder to read.

  Bad example:

  ```python
  try:
      response = self.comprehend.list_document_classifiers()
      return response['DocumentClassifierPropertiesList']
  except Exception as e:
      print(f"Error listing classifiers: {str(e)}")
      raise
  ```

  Good example:

  ```python
  response = self.comprehend.list_document_classifiers()
  return response['DocumentClassifierPropertiesList']
  ```

## Git commits

- Do not add "conventional commit" style message prefix like "feat:".

  DON'T:

  ```sh
  git commit -m 'feat: Added feature A"
  ```

  DO:

  ```sh
  git commit -m "Added feature A"
  ```
